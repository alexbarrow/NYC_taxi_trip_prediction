{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Копия блокнота \"Untitled0.ipynb\"","provenance":[{"file_id":"1UeXPXrJgrZ7iFYLL65Fdc3PxoeWWMnBj","timestamp":1650030044422}],"authorship_tag":"ABX9TyMdikyMr8zsq+66QEONtbO+"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"id":"eQ43VZElHCNx","executionInfo":{"status":"ok","timestamp":1650028611625,"user_tz":-420,"elapsed":2184,"user":{"displayName":"Alex","userId":"10614441205152697937"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"2ca221c7-d2d6-427d-9a6c-266b8fa9b545"},"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/statsmodels/tools/_testing.py:19: FutureWarning: pandas.util.testing is deprecated. Use the functions in the public API at pandas.testing instead.\n","  import pandas.util.testing as tm\n"]}],"source":["import pandas as pd\n","import numpy as np\n","import scipy as sc\n","from scipy import stats\n","import matplotlib.pyplot as plt\n","import statsmodels.api as sm\n","from statsmodels.tsa.stattools import adfuller\n","from sklearn.preprocessing import StandardScaler\n","from sklearn.cluster import KMeans\n","from itertools import product\n","import datetime\n","\n","import warnings\n","warnings.simplefilter(action='ignore')"]},{"cell_type":"code","source":["def get_final_dataset(region, f_num=55):\n","    dataset = region.copy()\n","    \n","    dataset.index = pd.to_datetime(dataset.index)\n","    # компоненты ряда Фурье\n","    w = 168\n","    t=np.arange(1, dataset.shape[0]+1)\n","    \n","    for i in range(1,f_num):\n","        sin = 's_'+str(i)\n","        cos = 'c_'+str(i)\n","        dataset[sin]= np.sin(2*i*np.pi*t/w)\n","        dataset[cos]= np.cos(2*i*np.pi*t/w)\n","    \n","    dataset['is_weekends'] = np.array((dataset.index.weekday==6)|(dataset.index.weekday==5)).astype(int)\n","    dataset['is_evening'] = np.array((dataset.index.hour == 19)|(dataset.index.hour == 20)).astype(int)\n","    \n","    hol_list = ['2016-01-01', '2016-01-18', '2016-02-15', '2016-05-30']\n","    x = np.array([True if str(i).split()[0] in hol_list else False for i in dataset.index]) \n","    dataset['is_holidays'] = np.array([True if str(i).split()[0] in hol_list else False for i in dataset.index]).astype(int)\n","    \n","    return dataset"],"metadata":{"id":"AnZOVBCxZTmQ","executionInfo":{"status":"ok","timestamp":1650029053898,"user_tz":-420,"elapsed":2,"user":{"displayName":"Alex","userId":"10614441205152697937"}}},"execution_count":19,"outputs":[]},{"cell_type":"markdown","source":["order=(p, d, q), seasonal_order=(P, D, Q, s)"],"metadata":{"id":"dEliuj-naaJf"}},{"cell_type":"code","source":["rnames = pd.read_csv('rnames.csv', dtype='str')"],"metadata":{"id":"gx_E3YXpXuZj","executionInfo":{"status":"ok","timestamp":1650028903262,"user_tz":-420,"elapsed":444,"user":{"displayName":"Alex","userId":"10614441205152697937"}}},"execution_count":14,"outputs":[]},{"cell_type":"code","source":["rnames"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":267},"id":"wDdmhGFpX1lh","executionInfo":{"status":"ok","timestamp":1650028669555,"user_tz":-420,"elapsed":478,"user":{"displayName":"Alex","userId":"10614441205152697937"}},"outputId":"2afa23cd-80f3-4aec-9c05-2f3c4c0a7b77"},"execution_count":3,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      0     1     2     3     4     5       6       7       8       9  ...  \\\n","0  1129  1130  1176  1177  1178  1221  1222.0  1223.0  1227.0  1228.0  ...   \n","1  1076  1077  1132  1181  1183  1184  1234.0  1235.0  1279.0  1280.0  ...   \n","2  1684  1733  1734  1783  2068  2069  2118.0  2119.0  2168.0     NaN  ...   \n","3  1172  1173  1174  1175  1182  1224  1225.0  1339.0  1387.0  1388.0  ...   \n","4  1075  1125  1126  1127  1128  1131  1179.0  1180.0  1229.0  1230.0  ...   \n","5  1480  1482  1483  1530  1580  1630     NaN     NaN     NaN     NaN  ...   \n","\n","       17      18      19      20      21      22      23      24      25  \\\n","0  1377.0  1378.0  1380.0  1426.0  1532.0  1533.0     NaN     NaN     NaN   \n","1  1333.0  1334.0  1335.0  1336.0  1337.0  1383.0  1384.0  1385.0  1386.0   \n","2     NaN     NaN     NaN     NaN     NaN     NaN     NaN     NaN     NaN   \n","3  1439.0  1441.0  1442.0     NaN     NaN     NaN     NaN     NaN     NaN   \n","4     NaN     NaN     NaN     NaN     NaN     NaN     NaN     NaN     NaN   \n","5     NaN     NaN     NaN     NaN     NaN     NaN     NaN     NaN     NaN   \n","\n","       26  \n","0     NaN  \n","1  1434.0  \n","2     NaN  \n","3     NaN  \n","4     NaN  \n","5     NaN  \n","\n","[6 rows x 27 columns]"],"text/html":["\n","  <div id=\"df-25b8ca58-7d02-4978-b2dc-9c5a4f378c5f\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","      <th>1</th>\n","      <th>2</th>\n","      <th>3</th>\n","      <th>4</th>\n","      <th>5</th>\n","      <th>6</th>\n","      <th>7</th>\n","      <th>8</th>\n","      <th>9</th>\n","      <th>...</th>\n","      <th>17</th>\n","      <th>18</th>\n","      <th>19</th>\n","      <th>20</th>\n","      <th>21</th>\n","      <th>22</th>\n","      <th>23</th>\n","      <th>24</th>\n","      <th>25</th>\n","      <th>26</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1129</td>\n","      <td>1130</td>\n","      <td>1176</td>\n","      <td>1177</td>\n","      <td>1178</td>\n","      <td>1221</td>\n","      <td>1222.0</td>\n","      <td>1223.0</td>\n","      <td>1227.0</td>\n","      <td>1228.0</td>\n","      <td>...</td>\n","      <td>1377.0</td>\n","      <td>1378.0</td>\n","      <td>1380.0</td>\n","      <td>1426.0</td>\n","      <td>1532.0</td>\n","      <td>1533.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1076</td>\n","      <td>1077</td>\n","      <td>1132</td>\n","      <td>1181</td>\n","      <td>1183</td>\n","      <td>1184</td>\n","      <td>1234.0</td>\n","      <td>1235.0</td>\n","      <td>1279.0</td>\n","      <td>1280.0</td>\n","      <td>...</td>\n","      <td>1333.0</td>\n","      <td>1334.0</td>\n","      <td>1335.0</td>\n","      <td>1336.0</td>\n","      <td>1337.0</td>\n","      <td>1383.0</td>\n","      <td>1384.0</td>\n","      <td>1385.0</td>\n","      <td>1386.0</td>\n","      <td>1434.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1684</td>\n","      <td>1733</td>\n","      <td>1734</td>\n","      <td>1783</td>\n","      <td>2068</td>\n","      <td>2069</td>\n","      <td>2118.0</td>\n","      <td>2119.0</td>\n","      <td>2168.0</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1172</td>\n","      <td>1173</td>\n","      <td>1174</td>\n","      <td>1175</td>\n","      <td>1182</td>\n","      <td>1224</td>\n","      <td>1225.0</td>\n","      <td>1339.0</td>\n","      <td>1387.0</td>\n","      <td>1388.0</td>\n","      <td>...</td>\n","      <td>1439.0</td>\n","      <td>1441.0</td>\n","      <td>1442.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1075</td>\n","      <td>1125</td>\n","      <td>1126</td>\n","      <td>1127</td>\n","      <td>1128</td>\n","      <td>1131</td>\n","      <td>1179.0</td>\n","      <td>1180.0</td>\n","      <td>1229.0</td>\n","      <td>1230.0</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>1480</td>\n","      <td>1482</td>\n","      <td>1483</td>\n","      <td>1530</td>\n","      <td>1580</td>\n","      <td>1630</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>6 rows × 27 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-25b8ca58-7d02-4978-b2dc-9c5a4f378c5f')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-25b8ca58-7d02-4978-b2dc-9c5a4f378c5f button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-25b8ca58-7d02-4978-b2dc-9c5a4f378c5f');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":3}]},{"cell_type":"code","source":["reg3 = list(map(str, rnames.iloc[3][:20]))"],"metadata":{"id":"nrQSYFukYNm8","executionInfo":{"status":"ok","timestamp":1650028922286,"user_tz":-420,"elapsed":465,"user":{"displayName":"Alex","userId":"10614441205152697937"}}},"execution_count":15,"outputs":[]},{"cell_type":"code","source":["temp = pd.read_csv('main_data_may.csv')\n","temp.index = temp.time\n","temp.drop('time', axis=1, inplace=True)"],"metadata":{"id":"eyUIuFw6L7iT","executionInfo":{"status":"ok","timestamp":1650028976792,"user_tz":-420,"elapsed":4,"user":{"displayName":"Alex","userId":"10614441205152697937"}}},"execution_count":17,"outputs":[]},{"cell_type":"code","source":["ind_last=3648\n","start_p = 2903\n","last_step = 738"],"metadata":{"id":"mqeW4AVrZKr2","executionInfo":{"status":"ok","timestamp":1650029521740,"user_tz":-420,"elapsed":447,"user":{"displayName":"Alex","userId":"10614441205152697937"}}},"execution_count":24,"outputs":[]},{"cell_type":"code","source":["%%time\n","r3_sum = 0\n","for reg in reg3:\n","  print(reg)\n","  data = get_final_dataset(temp[[reg]], f_num=51)\n","\n","  model = sm.tsa.statespace.SARIMAX(data[reg][0 :ind_last],exog=data.drop(reg, axis=1)[0 :ind_last], order=(2, 0, 3),\n","                                       seasonal_order=(1, 0, 0, 24),\n","                                       enforce_stationarity=False,\n","                                       enforce_invertibility=False,freq='H').fit(disp=False)\n","\n","\n","  q_sum = 0\n","  for i in range(last_step):\n","      new_predict=model.get_prediction(start=start_p+i, end=start_p+i+5, dynamic=True,  exog=data.drop(reg, axis=1)[start_p+i:start_p+i+6]).predicted_mean\n","\n","      q_sum += abs(new_predict - data[reg].iloc[start_p+i:start_p+i+6]).sum()\n","  print('q_sum:  ',q_sum)\n","  r3_sum+=q_sum\n","\n","print('Regions sum:  ', r3_sum)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"avJc1_Q4ZCkc","outputId":"4029387a-5841-4dda-f9cb-95f58d5e2c2e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["1172\n"]}]},{"cell_type":"code","source":[""],"metadata":{"id":"DTx1UTOLawvD"},"execution_count":null,"outputs":[]}]}